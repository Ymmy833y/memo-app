const e="memo-app-cache-v2",t=["https://uicdn.toast.com/editor/latest/toastui-editor.min.css","https://uicdn.toast.com/editor/latest/theme/toastui-editor-dark.min.css","https://uicdn.toast.com/tui-color-picker/latest/tui-color-picker.min.css","https://uicdn.toast.com/editor-plugin-color-syntax/latest/toastui-editor-plugin-color-syntax.min.css","https://cdnjs.cloudflare.com/ajax/libs/prism/1.23.0/themes/prism.min.css","https://uicdn.toast.com/editor-plugin-code-syntax-highlight/latest/toastui-editor-plugin-code-syntax-highlight.min.css"];self.addEventListener("install",s=>{s.waitUntil(fetch("./parcel-manifest.json").then(e=>e.json()).then(s=>{let o=Object.values(s).map(e=>new URL(e,self.location).toString()),n=new URL("./index.html",self.location).toString();o.includes(n)||o.push(n);let c=o.concat(t);return caches.open(e).then(e=>Promise.all(c.map(t=>"chrome-extension:"===new URL(t).protocol?Promise.resolve():t.startsWith("https://uicdn.toast.com/")?fetch(new Request(t,{mode:"no-cors"})).then(s=>e.put(t,s)).catch(e=>(console.error(`Failed to cache ${t}:`,e),Promise.resolve())):fetch(t).then(s=>e.put(t,s)).catch(e=>(console.error(`Failed to cache ${t}:`,e),Promise.resolve())))))}).catch(e=>{console.error("Failed to load asset manifest:",e)}))}),self.addEventListener("activate",t=>{t.waitUntil(caches.keys().then(t=>Promise.all(t.filter(t=>t!==e).map(e=>caches.delete(e)))))}),self.addEventListener("fetch",t=>{let s=new URL(t.request.url);if(!t.request.url.includes("/ws")&&"chrome-extension:"!==s.protocol){if("navigate"===t.request.mode||["document","script","style"].includes(t.request.destination)){t.respondWith(fetch(t.request).then(s=>{console.log("[SW] Network fetch succeeded for:",t.request.url);let o=s.clone();return caches.open(e).then(e=>{e.put(t.request,o)}),s}).catch(()=>(console.warn("[SW] Network fetch failed for:",t.request.url,", attempting to serve from cache."),caches.match(t.request).then(e=>e?(console.log("[SW] Serving cached response for:",t.request.url),e):"navigate"===t.request.mode?(console.warn("[SW] No cached response found, serving cached index.html for navigation request."),caches.match(new URL("./index.html",self.location).toString())):(console.error("[SW] No cached response available for:",t.request.url),new Response("",{status:503,statusText:"Service Unavailable",headers:{"Content-Type":"text/plain"}}))))));return}t.respondWith(caches.match(t.request).then(e=>e?(console.log("[SW] Serving cached response for:",t.request.url),e):fetch(t.request).then(e=>e).catch(()=>(console.error("[SW] Failed to fetch:",t.request.url),new Response("",{status:503,statusText:"Service Unavailable",headers:{"Content-Type":"text/plain"}})))))}});
//# sourceMappingURL=sw.js.map
